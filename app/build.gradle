apply plugin: 'com.android.application'
apply plugin: 'android-rocket-launcher'

// get signing properties
Properties keystoreProperties = new Properties()
if (project.rootProject.file('local.properties').exists()) {
    Properties localProperties = new Properties()
    localProperties.load(project.rootProject.file('local.properties').newDataInputStream())
    if (localProperties.getProperty('signingPropertiesFile') != null
            && new File(localProperties.getProperty('signingPropertiesFile')).exists()) {
        keystoreProperties.load(
                new FileInputStream(file(localProperties.getProperty('signingPropertiesFile'))))
    }
}
if (keystoreProperties.isEmpty()) {
    keystoreProperties.setProperty('storeFile', 'empty.keystore')
    keystoreProperties.setProperty('storePassword', 'storePassword')
    keystoreProperties.setProperty('keyAlias', 'keyAlias')
    keystoreProperties.setProperty('keyPassword', 'keyPassword')
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    defaultConfig {
        applicationId "de.eric_scheibler.tactileclock"
        minSdkVersion 16
        targetSdkVersion 29
        resConfigs "en", "de"
        versionCode 8
        versionName '2.1.0'
        // project website
        buildConfigField 'String', 'CONTACT_EMAIL_ADDRESS', '"tactile-clock@eric-scheibler.de"'
        buildConfigField 'String', 'PROJECT_WEBSITE', '"https://github.com/scheibler/TactileClock"'
        // set .apk name
        setProperty("archivesBaseName", "${archivesBaseName}-$versionName")
    }

    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
        }
    }

    lintOptions {
        disable "GoogleAppIndexingWarning", "ButtonStyle", "UseSparseArrays",
                "UseCompoundDrawables", "AllowBackup", "IconLauncherShape", "Autofill"
    }
}

dependencies {
    // androidX
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core:1.3.0'
    implementation 'androidx.drawerlayout:drawerlayout:1.0.0'
    implementation 'androidx.fragment:fragment:1.2.4'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
    implementation 'androidx.viewpager:viewpager:1.0.0'
    // material design
    implementation 'com.google.android.material:material:1.1.0'
    // guava
    implementation 'com.google.guava:guava:28.2-android'
    // logging
    implementation 'com.jakewharton.timber:timber:4.7.1'
}
